plugins {
    id 'java'
}

group = 'io.github.alexshamrai'
version = '0.2.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.12.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation project(':')
}

test {
    useJUnitPlatform()

    def threads = System.getProperty("threads")
    println "Configured number of threads: ${threads ?: 'not set'}"

    if (threads?.isInteger()) {
        def threadsNumber = threads.toInteger()
        if (threadsNumber > 1) {
            systemProperties += [
                    'junit.jupiter.execution.parallel.enabled'                   : true,
                    'junit.jupiter.execution.parallel.mode.default'              : 'concurrent',
                    'junit.jupiter.execution.parallel.mode.classes.default'      : 'concurrent',
                    'junit.jupiter.execution.parallel.config.strategy'           : 'fixed',
                    'junit.jupiter.execution.parallel.config.fixed.parallelism'  : threadsNumber,
                    'junit.jupiter.execution.parallel.config.fixed.max-pool-size': threadsNumber
            ]
        }
    } else {
        println "Invalid or missing 'threads' property. Default settings will be used."
    }

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}
